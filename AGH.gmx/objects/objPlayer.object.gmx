<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_sprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.flag = "MCA{n0tTh3FlAg}"

gravity = .1;
gravity_direction = 270;
global.ip = "hardGame.mitrestemctf.org"

Socket = network_create_socket( network_socket_tcp );
net_init();
isConnected = network_connect_raw( global.netSock , global.ip , 6900 );

net_cmd_add_handler("connected", connectedExecuteMe);
net_cmd_add_handler("main", handle_chat);
net_cmd_add_handler("Upflag", getFlag);



Buffer = buffer_create( 1024 , buffer_fixed , 1 );
Result = 0;
Ping = 0;

global.CurrentRoom  = 1;
create = 0;


init(128);

lastSend = current_time;









</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveRate = 4;

if place_meeting(x,y+1,objBlock){
gravity = 0
}else{
gravity = 1
}

if(keyboard_check(ord("A")) || keyboard_check(vk_left) ){
    if (place_free(x-moveRate,y) &amp;&amp; x&gt;0 ) {
    x-=moveRate;
    }
}

if(keyboard_check(ord("D")) || keyboard_check(vk_right) ){
    if (place_free(x+moveRate,y) &amp;&amp; x &lt; room_width-40 ) {
    x+=moveRate;
    }
}


if(keyboard_check(ord("W")) || keyboard_check(vk_up) ){
    if(place_meeting(x,y+1,objBlock) ){
    vspeed = -20
    }
}
if(y &lt; 0){y = yprevious; vspeed = 5}

///////////////////networking/////////////////////////
    
     if(create == 0)
    {
         net_cmd_init("main")
         gh = AES_auto16(x,"7AA2701864CB9C4F",0);
         net_cmd_add_data("x",gh)
         net_cmd_add_data("y",AES_auto16(y,"7AA2701864CB9C4F",0))
         net_cmd_add_data("room",AES_auto16(global.CurrentRoom,"7AA2701864CB9C4F",0))//x = global.CurrentRoom
         net_cmd_send(0,0)
         lastSend = current_time;
         create = 1;
    }
   
   
   /*
   aes_string(gh,"lhTFtq9AQj3Ay3JD",1,0,1) // 
   gh = state_to_string();
   

/*
  



   
   
   buffer_seek( Buffer , buffer_seek_start , 0 );
   buffer_write( Buffer , buffer_string , "x:17");

   
   Result = network_send_packet( Socket , Buffer , buffer_tell( Buffer ) );











</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


move_contact_solid(direction,12)
vspeed = 0

/*
x = xprevious;
y = yprevious;
speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFlag">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if(current_time-lastSend &gt; 1000)
    {
         net_cmd_init("main")
         gh = AES_auto16(x,"7AA2701864CB9C4F",0);
         net_cmd_add_data("x",gh)
         net_cmd_add_data("y",AES_auto16(y,"7AA2701864CB9C4F",0))
         net_cmd_add_data("room",AES_auto16(global.CurrentRoom,"7AA2701864CB9C4F",0))//x = global.CurrentRoom
         net_cmd_send(0,0)
         lastSend = current_time;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>net_cmd_resolve();


/*
    var type_event = ds_map_find_value( async_load , "type" );
   switch( type_event ) {
      case network_type_data:
         var buffer = ds_map_find_value( async_load , "buffer" );
         buffer_seek( buffer , buffer_seek_start , 0 );
         ReceivedPacket( buffer );
      break;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>   free_memory();
   network_destroy( Socket );
   buffer_delete( Buffer );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,-1,x,y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
